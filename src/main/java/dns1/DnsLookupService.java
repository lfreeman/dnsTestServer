package dns1;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.commons.lang3.ArrayUtils;
import org.mapdb.DB;
import org.mapdb.DBMaker;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import de.measite.minidns.DNSMessage;
import de.measite.minidns.Question;
import de.measite.minidns.Record;
import de.measite.minidns.Record.CLASS;
import de.measite.minidns.Record.TYPE;
import de.measite.minidns.record.ATTRSTRING;
import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;
import io.vertx.core.ServiceHelper;
import io.vertx.core.Vertx;
import io.vertx.core.buffer.Buffer;
import io.vertx.core.datagram.DatagramPacket;
import io.vertx.core.datagram.DatagramSocket;
import io.vertx.core.datagram.DatagramSocketOptions;
import io.vertx.core.net.impl.SocketAddressImpl;
import io.vertx.core.spi.BufferFactory;

@Service
public class DnsLookupService {
    private static final Logger logger = LoggerFactory.getLogger(DnsLookupService.class);

    private DB db;
    private Map<String, Spid> spidMap;
    private static Map<String, String> mdnSpidMap;

    private Vertx vertx;

    @Autowired
    public void setVertx(Vertx vertx) {
        this.vertx = vertx;
    }

    public DnsLookupService() {
        this.db = DBMaker.fileDB(new File("testdb"))
                .closeOnJvmShutdown()
                .transactionDisable()
                .fileMmapEnableIfSupported()
                .cacheHashTableEnable()
                .make();

        spidMap = db.treeMap("spid");
        // db.commit();
        // db.close();
    }

    public String lookupSpid(String mdn) {
        // long timeToLive = TimeUnit.DAYS.toMillis(1);
        String mdnPattern = mdn.substring(0, 8);

        //Spid spid = spidMap.get(mdnPattern);
        Spid spid = spidMap.get(mdn);

        if (spid == null || spid.isExpired()) {
            // String spidString =
            lookupSpidRemote(mdn);
            // spid = new Spid(mdnPattern, spidString, timeToLive);
            // spidMap.put(mdnPattern, spid);
        }

        if (spid == null) {
            return null;
        }
        return spid.getSpid();
    }


    public void lookupSpidRemote(String mdn) {

        // Future future = Future.future();
        final DatagramSocket socket = vertx.createDatagramSocket(new DatagramSocketOptions());
        socket.listen(6667, "0.0.0.0", new Handler<AsyncResult<DatagramSocket>>() {
            public void handle(AsyncResult<DatagramSocket> asyncResult) {

                if (asyncResult.succeeded()) {
                    socket.handler(new Handler<DatagramPacket>() {

                        @Override
                        public void handle(DatagramPacket packet) {
                            final SocketAddressImpl sender = (SocketAddressImpl) packet.sender();

                            try {
                                final DNSMessage dnsMessageIn = DNSMessage.parse(packet.data().getBytes());
                                final String mdn = extractMdn(dnsMessageIn);
                                ATTRSTRING data = (ATTRSTRING) (dnsMessageIn.getAnswers()[0].getPayload());
                                String spidString = data.getSpid();
                                // future.complete(spid);
                                long timeToLive = TimeUnit.DAYS.toMillis(1);

                                Spid spid = new Spid(mdn, spidString, timeToLive);
                                spidMap.put(mdn, spid);
                                socket.close();


                            } catch (IOException e) {
                                logger.error(e.getStackTrace().toString());
                            }
                        }
                    });
                } else {
                    logger.error("Listen failed", asyncResult.cause());
                }

            };
        });
        DNSMessage dnsMessage = new DNSMessage();
        String name = nameFromMdn(mdn);
        Question q = new Question(name, TYPE.ANY, CLASS.IN);
        dnsMessage.setQuestions(new Question[] {q});
        dnsMessage.setAnswers(new Record[0]);
        dnsMessage.setRecursionDesired(true);
        dnsMessage.setId(1);

        Buffer buffer;
        try {
            buffer = ServiceHelper.loadFactory(BufferFactory.class).buffer(dnsMessage.toArray());

            socket.send(buffer, 1053, "10.69.4.240", new Handler<AsyncResult<DatagramSocket>>() {

                @Override
                public void handle(AsyncResult<DatagramSocket> asyncResult) {
                    if (asyncResult.succeeded()) {
                        socket.handler(new Handler<DatagramPacket>() {

                            @Override
                            public void handle(DatagramPacket packet) {}

                        });
                    }
                }
            });
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        // String spid = null;
        // try {
        // //future.wait();
        // spid = future.result().toString();
        // } catch (InterruptedException e) {
        // // TODO Auto-generated catch block
        // e.printStackTrace();
        // }

        //
        // String spid = mdnSpidMap.get(mdn);
        // if (spid == null) {
        // spid = "V047";
        // }
        // socket.close();
        // return spid;
    }

    static {
        mdnSpidMap = new HashMap<>();
        mdnSpidMap.put("19162343", "V056");
        mdnSpidMap.put("11025339", "Y434");
        mdnSpidMap.put("11025338", "Y434");
        mdnSpidMap.put("11024639", "Y370");
        mdnSpidMap.put("11024638", "Y370");
        mdnSpidMap.put("11025335", "Y434");
        mdnSpidMap.put("11025334", "Y434");
        mdnSpidMap.put("11025337", "Y434");
        mdnSpidMap.put("11025336", "Y434");
        mdnSpidMap.put("11025331", "Y434");
        mdnSpidMap.put("11025330", "Y434");
        mdnSpidMap.put("11025333", "Y434");
        mdnSpidMap.put("11025332", "Y434");
        mdnSpidMap.put("11025234", "Y425");
        mdnSpidMap.put("11025235", "Y425");
        mdnSpidMap.put("11025236", "Y425");
        mdnSpidMap.put("11025237", "Y425");
        mdnSpidMap.put("11025230", "Y425");
        mdnSpidMap.put("11025231", "Y425");
        mdnSpidMap.put("11025232", "Y425");
        mdnSpidMap.put("11025233", "Y425");
        mdnSpidMap.put("11024804", "Y385");
        mdnSpidMap.put("11024805", "Y385");
        mdnSpidMap.put("11024806", "Y385");
        mdnSpidMap.put("11024807", "Y385");
        mdnSpidMap.put("11025238", "Y425");
        mdnSpidMap.put("11025239", "Y425");
        mdnSpidMap.put("11024802", "Y385");
        mdnSpidMap.put("11024803", "Y385");
        mdnSpidMap.put("11024963", "Y401");
        mdnSpidMap.put("11024962", "Y401");
        mdnSpidMap.put("11024961", "Y401");
        mdnSpidMap.put("11024960", "Y401");
        mdnSpidMap.put("11024967", "Y401");
        mdnSpidMap.put("11024966", "Y401");
        mdnSpidMap.put("11024677", "Y374");
        mdnSpidMap.put("11024964", "Y401");
        mdnSpidMap.put("11025308", "Y431");
        mdnSpidMap.put("11024969", "Y401");
        mdnSpidMap.put("11024968", "Y401");
        mdnSpidMap.put("17743952", "V092");
        mdnSpidMap.put("11025027", "Y406");
        mdnSpidMap.put("11025309", "Y431");
        mdnSpidMap.put("11024637", "Y370");
        mdnSpidMap.put("11024830", "Y388");
        mdnSpidMap.put("11025026", "Y406");
        mdnSpidMap.put("11024648", "Y371");
        mdnSpidMap.put("11024636", "Y370");
        mdnSpidMap.put("11024649", "Y371");
        mdnSpidMap.put("19162341", "V056");
        mdnSpidMap.put("11024635", "Y370");
        mdnSpidMap.put("11025020", "Y406");
        mdnSpidMap.put("11024634", "Y370");
        mdnSpidMap.put("11024852", "Y390");
        mdnSpidMap.put("11024633", "Y370");
        mdnSpidMap.put("11025022", "Y406");
        mdnSpidMap.put("11024998", "Y404");
        mdnSpidMap.put("11024632", "Y370");
        mdnSpidMap.put("11025348", "Y435");
        mdnSpidMap.put("11025349", "Y435");
        mdnSpidMap.put("11025423", "Y442");
        mdnSpidMap.put("11025422", "Y442");
        mdnSpidMap.put("11025425", "Y442");
        mdnSpidMap.put("11025424", "Y442");
        mdnSpidMap.put("11025427", "Y442");
        mdnSpidMap.put("11025426", "Y442");
        mdnSpidMap.put("11025340", "Y435");
        mdnSpidMap.put("11025341", "Y435");
        mdnSpidMap.put("11025342", "Y435");
        mdnSpidMap.put("11025343", "Y435");
        mdnSpidMap.put("11025344", "Y435");
        mdnSpidMap.put("11025345", "Y435");
        mdnSpidMap.put("11025346", "Y435");
        mdnSpidMap.put("11025347", "Y435");
        mdnSpidMap.put("18026592", "V021");
        mdnSpidMap.put("11025029", "Y406");
        mdnSpidMap.put("11024854", "Y390");
        mdnSpidMap.put("11024897", "Y394");
        mdnSpidMap.put("11024896", "Y394");
        mdnSpidMap.put("11024895", "Y394");
        mdnSpidMap.put("11024894", "Y394");
        mdnSpidMap.put("11024893", "Y394");
        mdnSpidMap.put("11024768", "Y381");
        mdnSpidMap.put("19173935", "V046");
        mdnSpidMap.put("11024890", "Y394");
        mdnSpidMap.put("11024808", "Y385");
        mdnSpidMap.put("11024664", "Y373");
        mdnSpidMap.put("11024990", "Y404");
        mdnSpidMap.put("11024899", "Y394");
        mdnSpidMap.put("11024809", "Y385");
        mdnSpidMap.put("11024991", "Y404");
        mdnSpidMap.put("11025149", "Y416");
        mdnSpidMap.put("11024997", "Y404");
        mdnSpidMap.put("11024747", "Y379");
        mdnSpidMap.put("11024746", "Y379");
        mdnSpidMap.put("11024745", "Y379");
        mdnSpidMap.put("11024779", "Y382");
        mdnSpidMap.put("11024743", "Y379");
        mdnSpidMap.put("11024742", "Y379");
        mdnSpidMap.put("11024741", "Y379");
        mdnSpidMap.put("11024740", "Y379");
        mdnSpidMap.put("11024749", "Y379");
        mdnSpidMap.put("11024748", "Y379");
        mdnSpidMap.put("19249870", "V023");
        mdnSpidMap.put("11024800", "Y385");
        mdnSpidMap.put("15312981", "V099");
        mdnSpidMap.put("17726483", "V094");
        mdnSpidMap.put("11024801", "Y385");
        mdnSpidMap.put("11024939", "Y398");
        mdnSpidMap.put("17726482", "V095");
        mdnSpidMap.put("11024773", "Y382");
        mdnSpidMap.put("11024676", "Y374");
        mdnSpidMap.put("11025515", "Y450");
        mdnSpidMap.put("11025514", "Y450");
        mdnSpidMap.put("11025517", "Y450");
        mdnSpidMap.put("11025516", "Y450");
        mdnSpidMap.put("11025511", "Y450");
        mdnSpidMap.put("11025510", "Y450");
        mdnSpidMap.put("11025513", "Y450");
        mdnSpidMap.put("11025512", "Y450");
        mdnSpidMap.put("11025076", "Y410");
        mdnSpidMap.put("11024645", "Y371");
        mdnSpidMap.put("11025048", "Y407");
        mdnSpidMap.put("11025519", "Y450");
        mdnSpidMap.put("11025518", "Y450");
        mdnSpidMap.put("11024777", "Y382");
        mdnSpidMap.put("16548903", "V033");
        mdnSpidMap.put("11024905", "Y395");
        mdnSpidMap.put("11024686", "Y375");
        mdnSpidMap.put("11024775", "Y382");
        mdnSpidMap.put("11025616", "Y460");
        mdnSpidMap.put("11024965", "Y401");
        mdnSpidMap.put("11025617", "Y460");
        mdnSpidMap.put("18346949", "V074");
        mdnSpidMap.put("11024631", "Y370");
        mdnSpidMap.put("11024999", "Y404");
        mdnSpidMap.put("11025614", "Y460");
        mdnSpidMap.put("18346948", "V073");
        mdnSpidMap.put("11025615", "Y460");
        mdnSpidMap.put("11024831", "Y388");
        mdnSpidMap.put("19176483", "V017");
        mdnSpidMap.put("18346963", "V088");
        mdnSpidMap.put("18346962", "V087");
        mdnSpidMap.put("18346961", "V086");
        mdnSpidMap.put("18346960", "V085");
        mdnSpidMap.put("11025609", "Y459");
        mdnSpidMap.put("11025608", "Y459");
        mdnSpidMap.put("11025161", "Y418");
        mdnSpidMap.put("11025610", "Y460");
        mdnSpidMap.put("11025601", "Y459");
        mdnSpidMap.put("11025600", "Y459");
        mdnSpidMap.put("11025603", "Y459");
        mdnSpidMap.put("11025602", "Y459");
        mdnSpidMap.put("11025605", "Y459");
        mdnSpidMap.put("11025604", "Y459");
        mdnSpidMap.put("11025607", "Y459");
        mdnSpidMap.put("11025606", "Y459");
        mdnSpidMap.put("11025560", "Y455");
        mdnSpidMap.put("11025561", "Y455");
        mdnSpidMap.put("11025562", "Y455");
        mdnSpidMap.put("11025563", "Y455");
        mdnSpidMap.put("11025564", "Y455");
        mdnSpidMap.put("11025565", "Y455");
        mdnSpidMap.put("19162238", "V055");
        mdnSpidMap.put("19162239", "V055");
        mdnSpidMap.put("19162236", "V055");
        mdnSpidMap.put("11025569", "Y455");
        mdnSpidMap.put("19162234", "V055");
        mdnSpidMap.put("19162235", "V055");
        mdnSpidMap.put("19162232", "V055");
        mdnSpidMap.put("19162233", "V055");
        mdnSpidMap.put("19162230", "V055");
        mdnSpidMap.put("19162231", "V055");
        mdnSpidMap.put("11025490", "Y448");
        mdnSpidMap.put("11024937", "Y398");
        mdnSpidMap.put("11024640", "Y371");
        mdnSpidMap.put("11024839", "Y388");
        mdnSpidMap.put("11024935", "Y398");
        mdnSpidMap.put("19162349", "V056");
        mdnSpidMap.put("11024838", "Y388");
        mdnSpidMap.put("11025285", "Y429");
        mdnSpidMap.put("11025284", "Y429");
        mdnSpidMap.put("11025287", "Y429");
        mdnSpidMap.put("11025286", "Y429");
        mdnSpidMap.put("11025281", "Y429");
        mdnSpidMap.put("11025280", "Y429");
        mdnSpidMap.put("11025283", "Y429");
        mdnSpidMap.put("11025282", "Y429");
        mdnSpidMap.put("11025164", "Y418");
        mdnSpidMap.put("11025165", "Y418");
        mdnSpidMap.put("11025166", "Y418");
        mdnSpidMap.put("11024933", "Y398");
        mdnSpidMap.put("11025289", "Y429");
        mdnSpidMap.put("11025288", "Y429");
        mdnSpidMap.put("11025162", "Y418");
        mdnSpidMap.put("11025163", "Y418");
        mdnSpidMap.put("11025491", "Y448");
        mdnSpidMap.put("11024641", "Y371");
        mdnSpidMap.put("11025469", "Y445");
        mdnSpidMap.put("11025468", "Y445");
        mdnSpidMap.put("11024569", "Y365");
        mdnSpidMap.put("11024568", "Y365");
        mdnSpidMap.put("11025465", "Y445");
        mdnSpidMap.put("11025464", "Y445");
        mdnSpidMap.put("11025467", "Y445");
        mdnSpidMap.put("11025466", "Y445");
        mdnSpidMap.put("11025461", "Y445");
        mdnSpidMap.put("11025460", "Y445");
        mdnSpidMap.put("11025463", "Y445");
        mdnSpidMap.put("11025462", "Y445");
        mdnSpidMap.put("11025304", "Y431");
        mdnSpidMap.put("11025305", "Y431");
        mdnSpidMap.put("11025306", "Y431");
        mdnSpidMap.put("11025307", "Y431");
        mdnSpidMap.put("11025300", "Y431");
        mdnSpidMap.put("11025301", "Y431");
        mdnSpidMap.put("11025302", "Y431");
        mdnSpidMap.put("11025303", "Y431");
        mdnSpidMap.put("11025263", "Y428");
        mdnSpidMap.put("11025262", "Y428");
        mdnSpidMap.put("11025261", "Y428");
        mdnSpidMap.put("11025260", "Y428");
        mdnSpidMap.put("11025267", "Y428");
        mdnSpidMap.put("11025266", "Y428");
        mdnSpidMap.put("11025265", "Y428");
        mdnSpidMap.put("11025264", "Y428");
        mdnSpidMap.put("11024853", "Y390");
        mdnSpidMap.put("11025546", "Y453");
        mdnSpidMap.put("11024851", "Y390");
        mdnSpidMap.put("11024850", "Y390");
        mdnSpidMap.put("11024857", "Y390");
        mdnSpidMap.put("11024856", "Y390");
        mdnSpidMap.put("11024855", "Y390");
        mdnSpidMap.put("11024904", "Y395");
        mdnSpidMap.put("11024992", "Y404");
        mdnSpidMap.put("11024993", "Y404");
        mdnSpidMap.put("11024859", "Y390");
        mdnSpidMap.put("11024858", "Y390");
        mdnSpidMap.put("11024996", "Y404");
        mdnSpidMap.put("11024907", "Y395");
        mdnSpidMap.put("11024994", "Y404");
        mdnSpidMap.put("11024995", "Y404");
        mdnSpidMap.put("11024547", "Y363");
        mdnSpidMap.put("11024906", "Y395");
        mdnSpidMap.put("11024901", "Y395");
        mdnSpidMap.put("11024900", "Y395");
        mdnSpidMap.put("11024783", "Y383");
        mdnSpidMap.put("11024782", "Y383");
        mdnSpidMap.put("11024781", "Y383");
        mdnSpidMap.put("11024780", "Y383");
        mdnSpidMap.put("11024787", "Y383");
        mdnSpidMap.put("11024786", "Y383");
        mdnSpidMap.put("11024785", "Y383");
        mdnSpidMap.put("11024784", "Y383");
        mdnSpidMap.put("11024789", "Y383");
        mdnSpidMap.put("11024788", "Y383");
        mdnSpidMap.put("11024546", "Y363");
        mdnSpidMap.put("11025418", "Y441");
        mdnSpidMap.put("11025419", "Y441");
        mdnSpidMap.put("11025105", "Y412");
        mdnSpidMap.put("19142671", "V044");
        mdnSpidMap.put("11025410", "Y441");
        mdnSpidMap.put("11025411", "Y441");
        mdnSpidMap.put("11025412", "Y441");
        mdnSpidMap.put("11025413", "Y441");
        mdnSpidMap.put("11025414", "Y441");
        mdnSpidMap.put("11025415", "Y441");
        mdnSpidMap.put("11025416", "Y441");
        mdnSpidMap.put("11025417", "Y441");
        mdnSpidMap.put("11025119", "Y413");
        mdnSpidMap.put("11024931", "Y398");
        mdnSpidMap.put("11024902", "Y395");
        mdnSpidMap.put("11025100", "Y412");
        mdnSpidMap.put("11025118", "Y413");
        mdnSpidMap.put("11024523", "Y362");
        mdnSpidMap.put("11025109", "Y412");
        mdnSpidMap.put("11025101", "Y412");
        mdnSpidMap.put("11024541", "Y363");
        mdnSpidMap.put("17726471", "V096");
        mdnSpidMap.put("17726472", "V097");
        mdnSpidMap.put("11024865", "Y391");
        mdnSpidMap.put("11024944", "Y399");
        mdnSpidMap.put("17726473", "V098");
        mdnSpidMap.put("11024932", "Y398");
        mdnSpidMap.put("19893656", "V020");
        mdnSpidMap.put("19893655", "V020");
        mdnSpidMap.put("19893654", "V020");
        mdnSpidMap.put("19893653", "V020");
        mdnSpidMap.put("19893652", "V020");
        mdnSpidMap.put("11024522", "Y362");
        mdnSpidMap.put("19893651", "V020");
        mdnSpidMap.put("11025533", "Y452");
        mdnSpidMap.put("11024540", "Y363");
        mdnSpidMap.put("19893659", "V020");
        mdnSpidMap.put("19893658", "V020");
        mdnSpidMap.put("11025108", "Y412");
        mdnSpidMap.put("11024738", "Y378");
        mdnSpidMap.put("11024739", "Y378");
        mdnSpidMap.put("11024736", "Y378");
        mdnSpidMap.put("11024737", "Y378");
        mdnSpidMap.put("11024734", "Y378");
        mdnSpidMap.put("11025530", "Y452");
        mdnSpidMap.put("11024732", "Y378");
        mdnSpidMap.put("11024733", "Y378");
        mdnSpidMap.put("11024730", "Y378");
        mdnSpidMap.put("11024731", "Y378");
        mdnSpidMap.put("11025421", "Y442");
        mdnSpidMap.put("11025112", "Y413");
        mdnSpidMap.put("11025420", "Y442");
        mdnSpidMap.put("11024521", "Y362");
        mdnSpidMap.put("11024520", "Y362");
        mdnSpidMap.put("11024527", "Y362");
        mdnSpidMap.put("11025116", "Y413");
        mdnSpidMap.put("11024526", "Y362");
        mdnSpidMap.put("11025133", "Y415");
        mdnSpidMap.put("11025132", "Y415");
        mdnSpidMap.put("11025131", "Y415");
        mdnSpidMap.put("11025130", "Y415");
        mdnSpidMap.put("11025528", "Y451");
        mdnSpidMap.put("11025529", "Y451");
        mdnSpidMap.put("11025135", "Y415");
        mdnSpidMap.put("11025134", "Y415");
        mdnSpidMap.put("11025524", "Y451");
        mdnSpidMap.put("11025525", "Y451");
        mdnSpidMap.put("11025526", "Y451");
        mdnSpidMap.put("11025527", "Y451");
        mdnSpidMap.put("11025520", "Y451");
        mdnSpidMap.put("11025521", "Y451");
        mdnSpidMap.put("11025522", "Y451");
        mdnSpidMap.put("11025523", "Y451");
        mdnSpidMap.put("11025429", "Y442");
        mdnSpidMap.put("11024811", "Y386");
        mdnSpidMap.put("11025428", "Y442");
        mdnSpidMap.put("11024529", "Y362");
        mdnSpidMap.put("11025142", "Y416");
        mdnSpidMap.put("11024572", "Y366");
        mdnSpidMap.put("11024528", "Y362");
        mdnSpidMap.put("11025068", "Y409");
        mdnSpidMap.put("19142674", "V044");
        mdnSpidMap.put("11024628", "Y369");
        mdnSpidMap.put("19142672", "V044");
        mdnSpidMap.put("19142675", "V044");
        mdnSpidMap.put("11024574", "Y366");
        mdnSpidMap.put("11025612", "Y460");
        mdnSpidMap.put("19893650", "V020");
        mdnSpidMap.put("19142676", "V044");
        mdnSpidMap.put("11024575", "Y366");
        mdnSpidMap.put("11025024", "Y406");
        mdnSpidMap.put("19142677", "V044");
        mdnSpidMap.put("11024576", "Y366");
        mdnSpidMap.put("11024667", "Y373");
        mdnSpidMap.put("19052523", "V049");
        mdnSpidMap.put("11024573", "Y366");
        mdnSpidMap.put("11024603", "Y367");
        mdnSpidMap.put("11024600", "Y367");
        mdnSpidMap.put("11024577", "Y366");
        mdnSpidMap.put("11024606", "Y367");
        mdnSpidMap.put("11024607", "Y367");
        mdnSpidMap.put("11024604", "Y367");
        mdnSpidMap.put("11024605", "Y367");
        mdnSpidMap.put("11024570", "Y366");
        mdnSpidMap.put("11024629", "Y369");
        mdnSpidMap.put("11024609", "Y367");
        mdnSpidMap.put("11024862", "Y391");
        mdnSpidMap.put("11024571", "Y366");
        mdnSpidMap.put("11025227", "Y424");
        mdnSpidMap.put("11025226", "Y424");
        mdnSpidMap.put("11025225", "Y424");
        mdnSpidMap.put("11025224", "Y424");
        mdnSpidMap.put("11025223", "Y424");
        mdnSpidMap.put("11025222", "Y424");
        mdnSpidMap.put("11025221", "Y424");
        mdnSpidMap.put("11025220", "Y424");
        mdnSpidMap.put("11025186", "Y420");
        mdnSpidMap.put("11025187", "Y420");
        mdnSpidMap.put("11025184", "Y420");
        mdnSpidMap.put("11025185", "Y420");
        mdnSpidMap.put("11025182", "Y420");
        mdnSpidMap.put("11025183", "Y420");
        mdnSpidMap.put("11025229", "Y424");
        mdnSpidMap.put("11025181", "Y420");
        mdnSpidMap.put("11024956", "Y400");
        mdnSpidMap.put("11025371", "Y438");
        mdnSpidMap.put("11024954", "Y400");
        mdnSpidMap.put("17743942", "V091");
        mdnSpidMap.put("11024821", "Y387");
        mdnSpidMap.put("11024953", "Y400");
        mdnSpidMap.put("11024950", "Y400");
        mdnSpidMap.put("11025370", "Y438");
        mdnSpidMap.put("19142678", "V044");
        mdnSpidMap.put("11025373", "Y438");
        mdnSpidMap.put("11024958", "Y400");
        mdnSpidMap.put("11024959", "Y400");
        mdnSpidMap.put("19142685", "V042");
        mdnSpidMap.put("19142684", "V041");
        mdnSpidMap.put("11025372", "Y438");
        mdnSpidMap.put("19142681", "V038");
        mdnSpidMap.put("11025067", "Y409");
        mdnSpidMap.put("19142683", "V040");
        mdnSpidMap.put("19142682", "V039");
        mdnSpidMap.put("11025375", "Y438");
        mdnSpidMap.put("11024524", "Y362");
        mdnSpidMap.put("11025374", "Y438");
        mdnSpidMap.put("11024545", "Y363");
        mdnSpidMap.put("11024826", "Y387");
        mdnSpidMap.put("11025377", "Y438");
        mdnSpidMap.put("19142679", "V044");
        mdnSpidMap.put("11024544", "Y363");
        mdnSpidMap.put("11024949", "Y399");
        mdnSpidMap.put("11025376", "Y438");
        mdnSpidMap.put("11025481", "Y447");
        mdnSpidMap.put("11024516", "Y361");
        mdnSpidMap.put("11024517", "Y361");
        mdnSpidMap.put("11025359", "Y436");
        mdnSpidMap.put("11025358", "Y436");
        mdnSpidMap.put("11024512", "Y361");
        mdnSpidMap.put("11024513", "Y361");
        mdnSpidMap.put("11024510", "Y361");
        mdnSpidMap.put("11024511", "Y361");
        mdnSpidMap.put("11025353", "Y436");
        mdnSpidMap.put("11025352", "Y436");
        mdnSpidMap.put("11025351", "Y436");
        mdnSpidMap.put("11025350", "Y436");
        mdnSpidMap.put("11025357", "Y436");
        mdnSpidMap.put("11025356", "Y436");
        mdnSpidMap.put("11025355", "Y436");
        mdnSpidMap.put("11025354", "Y436");
        mdnSpidMap.put("11024827", "Y387");
        mdnSpidMap.put("19417865", "V028");
        mdnSpidMap.put("19417866", "V029");
        mdnSpidMap.put("19417867", "V030");
        mdnSpidMap.put("11024543", "Y363");
        mdnSpidMap.put("19417862", "V025");
        mdnSpidMap.put("19417863", "V026");
        mdnSpidMap.put("11024948", "Y399");
        mdnSpidMap.put("11024542", "Y363");
        mdnSpidMap.put("11024624", "Y369");
        mdnSpidMap.put("11024625", "Y369");
        mdnSpidMap.put("11024548", "Y363");
        mdnSpidMap.put("11024842", "Y389");
        mdnSpidMap.put("11025489", "Y447");
        mdnSpidMap.put("11024824", "Y387");
        mdnSpidMap.put("11024892", "Y394");
        mdnSpidMap.put("11024778", "Y382");
        mdnSpidMap.put("11025488", "Y447");
        mdnSpidMap.put("19062144", "V054");
        mdnSpidMap.put("11024891", "Y394");
        mdnSpidMap.put("11024772", "Y382");
        mdnSpidMap.put("11024620", "Y369");
        mdnSpidMap.put("11024770", "Y382");
        mdnSpidMap.put("11024771", "Y382");
        mdnSpidMap.put("11024776", "Y382");
        mdnSpidMap.put("18346947", "V072");
        mdnSpidMap.put("11024774", "Y382");
        mdnSpidMap.put("11024621", "Y369");
        mdnSpidMap.put("11024622", "Y369");
        mdnSpidMap.put("16319073", "V011");
        mdnSpidMap.put("11024844", "Y389");
        mdnSpidMap.put("11024623", "Y369");
        mdnSpidMap.put("11024825", "Y387");
        mdnSpidMap.put("11024673", "Y374");
        mdnSpidMap.put("11024845", "Y389");
        mdnSpidMap.put("11024626", "Y369");
        mdnSpidMap.put("11024879", "Y392");
        mdnSpidMap.put("11024863", "Y391");
        mdnSpidMap.put("11024846", "Y389");
        mdnSpidMap.put("11024878", "Y392");
        mdnSpidMap.put("18346946", "V071");
        mdnSpidMap.put("11024680", "Y375");
        mdnSpidMap.put("11024898", "Y394");
        mdnSpidMap.put("11024672", "Y374");
        mdnSpidMap.put("19249874", "V023");
        mdnSpidMap.put("11024627", "Y369");
        mdnSpidMap.put("17743992", "V093");
        mdnSpidMap.put("11025077", "Y410");
        mdnSpidMap.put("11024938", "Y398");
        mdnSpidMap.put("11025075", "Y410");
        mdnSpidMap.put("11025072", "Y410");
        mdnSpidMap.put("11025073", "Y410");
        mdnSpidMap.put("11025070", "Y410");
        mdnSpidMap.put("11025071", "Y410");
        mdnSpidMap.put("11024617", "Y368");
        mdnSpidMap.put("11025078", "Y410");
        mdnSpidMap.put("11025079", "Y410");
        mdnSpidMap.put("11024871", "Y392");
        mdnSpidMap.put("11024616", "Y368");
        mdnSpidMap.put("19893657", "V020");
        mdnSpidMap.put("11024870", "Y392");
        mdnSpidMap.put("11024682", "Y375");
        mdnSpidMap.put("11024671", "Y374");
        mdnSpidMap.put("19052541", "V050");
        mdnSpidMap.put("11025043", "Y407");
        mdnSpidMap.put("11024735", "Y378");
        mdnSpidMap.put("11025013", "Y405");
        mdnSpidMap.put("11024903", "Y395");
        mdnSpidMap.put("18346950", "V075");
        mdnSpidMap.put("18346951", "V076");
        mdnSpidMap.put("11024828", "Y387");
        mdnSpidMap.put("11024670", "Y374");
        mdnSpidMap.put("11024619", "Y368");
        mdnSpidMap.put("11024972", "Y402");
        mdnSpidMap.put("11024618", "Y368");
        mdnSpidMap.put("11025573", "Y456");
        mdnSpidMap.put("11025572", "Y456");
        mdnSpidMap.put("11025571", "Y456");
        mdnSpidMap.put("11025570", "Y456");
        mdnSpidMap.put("11025577", "Y456");
        mdnSpidMap.put("11025576", "Y456");
        mdnSpidMap.put("11025575", "Y456");
        mdnSpidMap.put("11025574", "Y456");
        mdnSpidMap.put("19142670", "V044");
        mdnSpidMap.put("11025579", "Y456");
        mdnSpidMap.put("11025578", "Y456");
        mdnSpidMap.put("11024822", "Y387");
        mdnSpidMap.put("11024823", "Y387");
        mdnSpidMap.put("11025588", "Y457");
        mdnSpidMap.put("19052513", "V047");
        mdnSpidMap.put("19052512", "V047");
        mdnSpidMap.put("19052511", "V047");
        mdnSpidMap.put("11025589", "Y457");
        mdnSpidMap.put("19052517", "V047");
        mdnSpidMap.put("19052516", "V047");
        mdnSpidMap.put("11025179", "Y419");
        mdnSpidMap.put("11025178", "Y419");
        mdnSpidMap.put("11025177", "Y419");
        mdnSpidMap.put("11025176", "Y419");
        mdnSpidMap.put("11025175", "Y419");
        mdnSpidMap.put("11025174", "Y419");
        mdnSpidMap.put("11025173", "Y419");
        mdnSpidMap.put("11025172", "Y419");
        mdnSpidMap.put("11025171", "Y419");
        mdnSpidMap.put("11025170", "Y419");
        mdnSpidMap.put("11024659", "Y372");
        mdnSpidMap.put("11024658", "Y372");
        mdnSpidMap.put("14027561", "V014");
        mdnSpidMap.put("11024551", "Y364");
        mdnSpidMap.put("11024556", "Y364");
        mdnSpidMap.put("11024557", "Y364");
        mdnSpidMap.put("11024554", "Y364");
        mdnSpidMap.put("11024555", "Y364");
        mdnSpidMap.put("11024651", "Y372");
        mdnSpidMap.put("11024650", "Y372");
        mdnSpidMap.put("11024653", "Y372");
        mdnSpidMap.put("11024652", "Y372");
        mdnSpidMap.put("11024655", "Y372");
        mdnSpidMap.put("11024654", "Y372");
        mdnSpidMap.put("11024657", "Y372");
        mdnSpidMap.put("11024656", "Y372");
        mdnSpidMap.put("11025317", "Y432");
        mdnSpidMap.put("11025199", "Y421");
        mdnSpidMap.put("11025315", "Y432");
        mdnSpidMap.put("11025314", "Y432");
        mdnSpidMap.put("11025313", "Y432");
        mdnSpidMap.put("11025312", "Y432");
        mdnSpidMap.put("11025258", "Y427");
        mdnSpidMap.put("11025198", "Y421");
        mdnSpidMap.put("11025256", "Y427");
        mdnSpidMap.put("11025257", "Y427");
        mdnSpidMap.put("11025254", "Y427");
        mdnSpidMap.put("11025255", "Y427");
        mdnSpidMap.put("11025252", "Y427");
        mdnSpidMap.put("11025253", "Y427");
        mdnSpidMap.put("11025319", "Y432");
        mdnSpidMap.put("11025318", "Y432");
        mdnSpidMap.put("11024866", "Y391");
        mdnSpidMap.put("11024867", "Y391");
        mdnSpidMap.put("11024864", "Y391");
        mdnSpidMap.put("11024829", "Y387");
        mdnSpidMap.put("11024989", "Y403");
        mdnSpidMap.put("11024988", "Y403");
        mdnSpidMap.put("11024860", "Y391");
        mdnSpidMap.put("11024861", "Y391");
        mdnSpidMap.put("11024985", "Y403");
        mdnSpidMap.put("11024984", "Y403");
        mdnSpidMap.put("11024987", "Y403");
        mdnSpidMap.put("11024986", "Y403");
        mdnSpidMap.put("11024981", "Y403");
        mdnSpidMap.put("11024980", "Y403");
        mdnSpidMap.put("11024983", "Y403");
        mdnSpidMap.put("11024982", "Y403");
        mdnSpidMap.put("11024674", "Y374");
        mdnSpidMap.put("19142673", "V044");
        mdnSpidMap.put("11025619", "Y460");
        mdnSpidMap.put("11025388", "Y439");
        mdnSpidMap.put("11025389", "Y439");
        mdnSpidMap.put("11024943", "Y399");
        mdnSpidMap.put("11025384", "Y439");
        mdnSpidMap.put("11025385", "Y439");
        mdnSpidMap.put("11025386", "Y439");
        mdnSpidMap.put("11025387", "Y439");
        mdnSpidMap.put("11025380", "Y439");
        mdnSpidMap.put("11025381", "Y439");
        mdnSpidMap.put("11025382", "Y439");
        mdnSpidMap.put("11025383", "Y439");
        mdnSpidMap.put("11025041", "Y407");
        mdnSpidMap.put("11025113", "Y413");
        mdnSpidMap.put("11024684", "Y375");
        mdnSpidMap.put("11025069", "Y409");
        mdnSpidMap.put("11024942", "Y399");
        mdnSpidMap.put("19417864", "V027");
        mdnSpidMap.put("11024912", "Y396");
        mdnSpidMap.put("11024630", "Y370");
        mdnSpidMap.put("11025040", "Y407");
        mdnSpidMap.put("11024913", "Y396");
        mdnSpidMap.put("11025147", "Y416");
        mdnSpidMap.put("11024685", "Y375");
        mdnSpidMap.put("16544561", "V037");
        mdnSpidMap.put("11024910", "Y396");
        mdnSpidMap.put("11024945", "Y399");
        mdnSpidMap.put("11024911", "Y396");
        mdnSpidMap.put("19162348", "V056");
        mdnSpidMap.put("11024916", "Y396");
        mdnSpidMap.put("11024917", "Y396");
        mdnSpidMap.put("11025047", "Y407");
        mdnSpidMap.put("11024914", "Y396");
        mdnSpidMap.put("18026596", "V021");
        mdnSpidMap.put("18026595", "V021");
        mdnSpidMap.put("18026594", "V021");
        mdnSpidMap.put("18026597", "V021");
        mdnSpidMap.put("11024915", "Y396");
        mdnSpidMap.put("18026591", "V021");
        mdnSpidMap.put("18026590", "V021");
        mdnSpidMap.put("18026593", "V021");
        mdnSpidMap.put("11024973", "Y402");
        mdnSpidMap.put("11024721", "Y377");
        mdnSpidMap.put("11024720", "Y377");
        mdnSpidMap.put("11024723", "Y377");
        mdnSpidMap.put("11024722", "Y377");
        mdnSpidMap.put("11024725", "Y377");
        mdnSpidMap.put("11024683", "Y375");
        mdnSpidMap.put("11024727", "Y377");
        mdnSpidMap.put("11024726", "Y377");
        mdnSpidMap.put("11024729", "Y377");
        mdnSpidMap.put("11024728", "Y377");
        mdnSpidMap.put("11024918", "Y396");
        mdnSpidMap.put("11025136", "Y415");
        mdnSpidMap.put("11025046", "Y407");
        mdnSpidMap.put("11024919", "Y396");
        mdnSpidMap.put("11025145", "Y416");
        mdnSpidMap.put("11024947", "Y399");
        mdnSpidMap.put("11025120", "Y414");
        mdnSpidMap.put("11025139", "Y415");
        mdnSpidMap.put("11025106", "Y412");
        mdnSpidMap.put("11025107", "Y412");
        mdnSpidMap.put("11025104", "Y412");
        mdnSpidMap.put("11025138", "Y415");
        mdnSpidMap.put("11025102", "Y412");
        mdnSpidMap.put("11025103", "Y412");
        mdnSpidMap.put("11025539", "Y452");
        mdnSpidMap.put("11025538", "Y452");
        mdnSpidMap.put("11025537", "Y452");
        mdnSpidMap.put("11025536", "Y452");
        mdnSpidMap.put("11025535", "Y452");
        mdnSpidMap.put("11025534", "Y452");
        mdnSpidMap.put("12657652", "V032");
        mdnSpidMap.put("11025532", "Y452");
        mdnSpidMap.put("11025531", "Y452");
        mdnSpidMap.put("12657651", "V031");
        mdnSpidMap.put("11025310", "Y432");
        mdnSpidMap.put("11025061", "Y409");
        mdnSpidMap.put("11024793", "Y384");
        mdnSpidMap.put("11025044", "Y407");
        mdnSpidMap.put("11024750", "Y380");
        mdnSpidMap.put("19183926", "V045");
        mdnSpidMap.put("11024928", "Y397");
        mdnSpidMap.put("19417861", "V024");
        mdnSpidMap.put("11024957", "Y400");
        mdnSpidMap.put("11024615", "Y368");
        mdnSpidMap.put("11024614", "Y368");
        mdnSpidMap.put("11025218", "Y423");
        mdnSpidMap.put("11025219", "Y423");
        mdnSpidMap.put("11024611", "Y368");
        mdnSpidMap.put("11024610", "Y368");
        mdnSpidMap.put("11024613", "Y368");
        mdnSpidMap.put("11024612", "Y368");
        mdnSpidMap.put("11025212", "Y423");
        mdnSpidMap.put("11025213", "Y423");
        mdnSpidMap.put("11025210", "Y423");
        mdnSpidMap.put("11025211", "Y423");
        mdnSpidMap.put("11025216", "Y423");
        mdnSpidMap.put("11025217", "Y423");
        mdnSpidMap.put("11025214", "Y423");
        mdnSpidMap.put("11025215", "Y423");
        mdnSpidMap.put("11025191", "Y421");
        mdnSpidMap.put("11025190", "Y421");
        mdnSpidMap.put("11025193", "Y421");
        mdnSpidMap.put("11025192", "Y421");
        mdnSpidMap.put("11025195", "Y421");
        mdnSpidMap.put("11025194", "Y421");
        mdnSpidMap.put("11025197", "Y421");
        mdnSpidMap.put("11025196", "Y421");
        mdnSpidMap.put("11025582", "Y457");
        mdnSpidMap.put("11025583", "Y457");
        mdnSpidMap.put("11025580", "Y457");
        mdnSpidMap.put("11025581", "Y457");
        mdnSpidMap.put("11025586", "Y457");
        mdnSpidMap.put("11025587", "Y457");
        mdnSpidMap.put("11025584", "Y457");
        mdnSpidMap.put("11025585", "Y457");
        mdnSpidMap.put("19062134", "V053");
        mdnSpidMap.put("11025045", "Y407");
        mdnSpidMap.put("11025492", "Y448");
        mdnSpidMap.put("11025050", "Y408");
        mdnSpidMap.put("19052510", "V047");
        mdnSpidMap.put("11025430", "Y443");
        mdnSpidMap.put("11025431", "Y443");
        mdnSpidMap.put("11025049", "Y407");
        mdnSpidMap.put("16548770", "V036");
        mdnSpidMap.put("16548771", "V036");
        mdnSpidMap.put("16548772", "V036");
        mdnSpidMap.put("16548773", "V036");
        mdnSpidMap.put("16548774", "V036");
        mdnSpidMap.put("16548775", "V036");
        mdnSpidMap.put("16548776", "V036");
        mdnSpidMap.put("16548777", "V036");
        mdnSpidMap.put("16548778", "V036");
        mdnSpidMap.put("16548779", "V036");
        mdnSpidMap.put("19052514", "V047");
        mdnSpidMap.put("11025447", "Y444");
        mdnSpidMap.put("11025446", "Y444");
        mdnSpidMap.put("11025445", "Y444");
        mdnSpidMap.put("11025444", "Y444");
        mdnSpidMap.put("17239455", "V081");
        mdnSpidMap.put("17239454", "V080");
        mdnSpidMap.put("11025368", "Y437");
        mdnSpidMap.put("11025369", "Y437");
        mdnSpidMap.put("11025366", "Y437");
        mdnSpidMap.put("11025367", "Y437");
        mdnSpidMap.put("11025364", "Y437");
        mdnSpidMap.put("11025365", "Y437");
        mdnSpidMap.put("11025362", "Y437");
        mdnSpidMap.put("11025363", "Y437");
        mdnSpidMap.put("11025360", "Y437");
        mdnSpidMap.put("11025361", "Y437");
        mdnSpidMap.put("17239451", "V077");
        mdnSpidMap.put("11025121", "Y414");
        mdnSpidMap.put("19052518", "V047");
        mdnSpidMap.put("19716243", "V057");
        mdnSpidMap.put("11024661", "Y373");
        mdnSpidMap.put("17239453", "V079");
        mdnSpidMap.put("11025613", "Y460");
        mdnSpidMap.put("17239452", "V078");
        mdnSpidMap.put("11025011", "Y405");
        mdnSpidMap.put("11025443", "Y444");
        mdnSpidMap.put("11025442", "Y444");
        mdnSpidMap.put("11024552", "Y364");
        mdnSpidMap.put("11024769", "Y381");
        mdnSpidMap.put("11025441", "Y444");
        mdnSpidMap.put("11024553", "Y364");
        mdnSpidMap.put("11024765", "Y381");
        mdnSpidMap.put("11024764", "Y381");
        mdnSpidMap.put("11024767", "Y381");
        mdnSpidMap.put("11025440", "Y444");
        mdnSpidMap.put("11024761", "Y381");
        mdnSpidMap.put("11024550", "Y364");
        mdnSpidMap.put("11024763", "Y381");
        mdnSpidMap.put("11024762", "Y381");
        mdnSpidMap.put("11024668", "Y373");
        mdnSpidMap.put("11025010", "Y405");
        mdnSpidMap.put("11025493", "Y448");
        mdnSpidMap.put("17239458", "V084");
        mdnSpidMap.put("11025494", "Y448");
        mdnSpidMap.put("11025062", "Y409");
        mdnSpidMap.put("11025495", "Y448");
        mdnSpidMap.put("18236541", "V058");
        mdnSpidMap.put("18236542", "V059");
        mdnSpidMap.put("18236545", "V061");
        mdnSpidMap.put("18236544", "V060");
        mdnSpidMap.put("11025497", "Y448");
        mdnSpidMap.put("11024819", "Y386");
        mdnSpidMap.put("11025611", "Y460");
        mdnSpidMap.put("11025498", "Y448");
        mdnSpidMap.put("11024601", "Y367");
        mdnSpidMap.put("11025449", "Y444");
        mdnSpidMap.put("11025499", "Y448");
        mdnSpidMap.put("11025448", "Y444");
        mdnSpidMap.put("11024558", "Y364");
        mdnSpidMap.put("11024881", "Y393");
        mdnSpidMap.put("11024681", "Y375");
        mdnSpidMap.put("11024559", "Y364");
        mdnSpidMap.put("11024882", "Y393");
        mdnSpidMap.put("12709491", "V015");
        mdnSpidMap.put("11024818", "Y386");
        mdnSpidMap.put("11024660", "Y373");
        mdnSpidMap.put("11024724", "Y377");
        mdnSpidMap.put("11024718", "Y376");
        mdnSpidMap.put("11024719", "Y376");
        mdnSpidMap.put("11025015", "Y405");
        mdnSpidMap.put("11024710", "Y376");
        mdnSpidMap.put("11024711", "Y376");
        mdnSpidMap.put("11024712", "Y376");
        mdnSpidMap.put("11024713", "Y376");
        mdnSpidMap.put("11024714", "Y376");
        mdnSpidMap.put("11024715", "Y376");
        mdnSpidMap.put("11024716", "Y376");
        mdnSpidMap.put("11024717", "Y376");
        mdnSpidMap.put("11025316", "Y432");
        mdnSpidMap.put("18346945", "V070");
        mdnSpidMap.put("18346944", "V069");
        mdnSpidMap.put("16548909", "V033");
        mdnSpidMap.put("16548908", "V033");
        mdnSpidMap.put("18346941", "V066");
        mdnSpidMap.put("18346943", "V068");
        mdnSpidMap.put("18346942", "V067");
        mdnSpidMap.put("19176484", "V018");
        mdnSpidMap.put("16548902", "V033");
        mdnSpidMap.put("16548901", "V033");
        mdnSpidMap.put("16548900", "V033");
        mdnSpidMap.put("16548907", "V033");
        mdnSpidMap.put("16548906", "V033");
        mdnSpidMap.put("16548905", "V033");
        mdnSpidMap.put("16548904", "V033");
        mdnSpidMap.put("11024602", "Y367");
        mdnSpidMap.put("11024744", "Y379");
        mdnSpidMap.put("11025311", "Y432");
        mdnSpidMap.put("11024816", "Y386");
        mdnSpidMap.put("11024662", "Y373");
        mdnSpidMap.put("11025259", "Y427");
        mdnSpidMap.put("12104477", "V012");
        mdnSpidMap.put("11025547", "Y453");
        mdnSpidMap.put("11025544", "Y453");
        mdnSpidMap.put("11025545", "Y453");
        mdnSpidMap.put("11025542", "Y453");
        mdnSpidMap.put("11025543", "Y453");
        mdnSpidMap.put("11025540", "Y453");
        mdnSpidMap.put("11025541", "Y453");
        mdnSpidMap.put("11024909", "Y395");
        mdnSpidMap.put("11024908", "Y395");
        mdnSpidMap.put("11025548", "Y453");
        mdnSpidMap.put("11025549", "Y453");
        mdnSpidMap.put("11024815", "Y386");
        mdnSpidMap.put("11024663", "Y373");
        mdnSpidMap.put("11024941", "Y399");
        mdnSpidMap.put("11025143", "Y416");
        mdnSpidMap.put("11025140", "Y416");
        mdnSpidMap.put("11025141", "Y416");
        mdnSpidMap.put("11025146", "Y416");
        mdnSpidMap.put("11025250", "Y427");
        mdnSpidMap.put("11025144", "Y416");
        mdnSpidMap.put("19052521", "V048");
        mdnSpidMap.put("19062181", "V051");
        mdnSpidMap.put("11025060", "Y409");
        mdnSpidMap.put("11025148", "Y416");
        mdnSpidMap.put("11025251", "Y427");
        mdnSpidMap.put("11025065", "Y409");
        mdnSpidMap.put("11024608", "Y367");
        mdnSpidMap.put("11025063", "Y409");
        mdnSpidMap.put("11025066", "Y409");
        mdnSpidMap.put("11025483", "Y447");
        mdnSpidMap.put("11025482", "Y447");
        mdnSpidMap.put("11025328", "Y433");
        mdnSpidMap.put("11025329", "Y433");
        mdnSpidMap.put("11025487", "Y447");
        mdnSpidMap.put("11025486", "Y447");
        mdnSpidMap.put("11025485", "Y447");
        mdnSpidMap.put("11025484", "Y447");
        mdnSpidMap.put("11025322", "Y433");
        mdnSpidMap.put("11025323", "Y433");
        mdnSpidMap.put("11025320", "Y433");
        mdnSpidMap.put("11025321", "Y433");
        mdnSpidMap.put("11025326", "Y433");
        mdnSpidMap.put("11025327", "Y433");
        mdnSpidMap.put("11025324", "Y433");
        mdnSpidMap.put("11025325", "Y433");
        mdnSpidMap.put("11025241", "Y426");
        mdnSpidMap.put("11025240", "Y426");
        mdnSpidMap.put("11025243", "Y426");
        mdnSpidMap.put("11025242", "Y426");
        mdnSpidMap.put("11025245", "Y426");
        mdnSpidMap.put("11025244", "Y426");
        mdnSpidMap.put("11025247", "Y426");
        mdnSpidMap.put("11025246", "Y426");
        mdnSpidMap.put("11025249", "Y426");
        mdnSpidMap.put("11025248", "Y426");
        mdnSpidMap.put("11024873", "Y392");
        mdnSpidMap.put("11024872", "Y392");
        mdnSpidMap.put("11024875", "Y392");
        mdnSpidMap.put("11024874", "Y392");
        mdnSpidMap.put("11024877", "Y392");
        mdnSpidMap.put("11024876", "Y392");
        mdnSpidMap.put("11024970", "Y402");
        mdnSpidMap.put("11024971", "Y402");
        mdnSpidMap.put("11024665", "Y373");
        mdnSpidMap.put("18346964", "V089");
        mdnSpidMap.put("11024974", "Y402");
        mdnSpidMap.put("11024975", "Y402");
        mdnSpidMap.put("11024976", "Y402");
        mdnSpidMap.put("11024977", "Y402");
        mdnSpidMap.put("11024978", "Y402");
        mdnSpidMap.put("11024979", "Y402");
        mdnSpidMap.put("19053231", "V022");
        mdnSpidMap.put("11025399", "Y440");
        mdnSpidMap.put("11025398", "Y440");
        mdnSpidMap.put("11025397", "Y440");
        mdnSpidMap.put("11025396", "Y440");
        mdnSpidMap.put("11025395", "Y440");
        mdnSpidMap.put("11025394", "Y440");
        mdnSpidMap.put("11025393", "Y440");
        mdnSpidMap.put("11025392", "Y440");
        mdnSpidMap.put("11025391", "Y440");
        mdnSpidMap.put("11025390", "Y440");
        mdnSpidMap.put("11024666", "Y373");
        mdnSpidMap.put("11024940", "Y399");
        mdnSpidMap.put("11025188", "Y420");
        mdnSpidMap.put("11025189", "Y420");
        mdnSpidMap.put("11024817", "Y386");
        mdnSpidMap.put("11024868", "Y391");
        mdnSpidMap.put("11025438", "Y443");
        mdnSpidMap.put("11025439", "Y443");
        mdnSpidMap.put("11025436", "Y443");
        mdnSpidMap.put("11025437", "Y443");
        mdnSpidMap.put("11025434", "Y443");
        mdnSpidMap.put("11025435", "Y443");
        mdnSpidMap.put("11025432", "Y443");
        mdnSpidMap.put("11025433", "Y443");
        mdnSpidMap.put("17239466", "V082");
        mdnSpidMap.put("17239467", "V083");
        mdnSpidMap.put("11024814", "Y386");
        mdnSpidMap.put("11024813", "Y386");
        mdnSpidMap.put("11024812", "Y386");
        mdnSpidMap.put("11024884", "Y393");
        mdnSpidMap.put("11024885", "Y393");
        mdnSpidMap.put("11024886", "Y393");
        mdnSpidMap.put("11024887", "Y393");
        mdnSpidMap.put("11024880", "Y393");
        mdnSpidMap.put("11025180", "Y420");
        mdnSpidMap.put("11025052", "Y408");
        mdnSpidMap.put("11024883", "Y393");
        mdnSpidMap.put("11025137", "Y415");
        mdnSpidMap.put("11025478", "Y446");
        mdnSpidMap.put("11025228", "Y424");
        mdnSpidMap.put("11024888", "Y393");
        mdnSpidMap.put("11024889", "Y393");
        mdnSpidMap.put("19417415", "V019");
        mdnSpidMap.put("19417414", "V019");
        mdnSpidMap.put("19417417", "V019");
        mdnSpidMap.put("19417416", "V019");
        mdnSpidMap.put("19417411", "V019");
        mdnSpidMap.put("19417410", "V019");
        mdnSpidMap.put("19417413", "V019");
        mdnSpidMap.put("19417412", "V019");
        mdnSpidMap.put("19162345", "V056");
        mdnSpidMap.put("19417419", "V019");
        mdnSpidMap.put("19417418", "V019");
        mdnSpidMap.put("11024760", "Y381");
        mdnSpidMap.put("11024754", "Y380");
        mdnSpidMap.put("11024755", "Y380");
        mdnSpidMap.put("11024756", "Y380");
        mdnSpidMap.put("11024757", "Y380");
        mdnSpidMap.put("11025053", "Y408");
        mdnSpidMap.put("11024751", "Y380");
        mdnSpidMap.put("11024752", "Y380");
        mdnSpidMap.put("11024753", "Y380");
        mdnSpidMap.put("11024952", "Y400");
        mdnSpidMap.put("11024669", "Y373");
        mdnSpidMap.put("11024810", "Y386");
        mdnSpidMap.put("11024758", "Y380");
        mdnSpidMap.put("11024759", "Y380");
        mdnSpidMap.put("11024929", "Y397");
        mdnSpidMap.put("11024820", "Y387");
        mdnSpidMap.put("11024951", "Y400");
        mdnSpidMap.put("11024687", "Y375");
        mdnSpidMap.put("11025054", "Y408");
        mdnSpidMap.put("19162340", "V056");
        mdnSpidMap.put("19052515", "V047");
        mdnSpidMap.put("11024689", "Y375");
        mdnSpidMap.put("19062132", "V052");
        mdnSpidMap.put("11025502", "Y449");
        mdnSpidMap.put("11025503", "Y449");
        mdnSpidMap.put("11025500", "Y449");
        mdnSpidMap.put("11025501", "Y449");
        mdnSpidMap.put("11025506", "Y449");
        mdnSpidMap.put("11025566", "Y455");
        mdnSpidMap.put("11025504", "Y449");
        mdnSpidMap.put("11025505", "Y449");
        mdnSpidMap.put("11025058", "Y408");
        mdnSpidMap.put("11025059", "Y408");
        mdnSpidMap.put("11025508", "Y449");
        mdnSpidMap.put("11025567", "Y455");
        mdnSpidMap.put("11024525", "Y362");
        mdnSpidMap.put("11025055", "Y408");
        mdnSpidMap.put("11025568", "Y455");
        mdnSpidMap.put("11025123", "Y414");
        mdnSpidMap.put("19162237", "V055");
        mdnSpidMap.put("11024925", "Y397");
        mdnSpidMap.put("11024927", "Y397");
        mdnSpidMap.put("11024924", "Y397");
        mdnSpidMap.put("11024644", "Y371");
        mdnSpidMap.put("11024923", "Y397");
        mdnSpidMap.put("11025269", "Y428");
        mdnSpidMap.put("11025056", "Y408");
        mdnSpidMap.put("11024922", "Y397");
        mdnSpidMap.put("11025025", "Y406");
        mdnSpidMap.put("11025128", "Y414");
        mdnSpidMap.put("11024549", "Y363");
        mdnSpidMap.put("19142686", "V043");
        mdnSpidMap.put("11025021", "Y406");
        mdnSpidMap.put("11024921", "Y397");
        mdnSpidMap.put("11025023", "Y406");
        mdnSpidMap.put("11025129", "Y414");
        mdnSpidMap.put("11024920", "Y397");
        mdnSpidMap.put("11024926", "Y397");
        mdnSpidMap.put("11025028", "Y406");
        mdnSpidMap.put("11025209", "Y422");
        mdnSpidMap.put("11025208", "Y422");
        mdnSpidMap.put("11025205", "Y422");
        mdnSpidMap.put("11025204", "Y422");
        mdnSpidMap.put("11025207", "Y422");
        mdnSpidMap.put("11025206", "Y422");
        mdnSpidMap.put("11025201", "Y422");
        mdnSpidMap.put("11025200", "Y422");
        mdnSpidMap.put("11025203", "Y422");
        mdnSpidMap.put("11025202", "Y422");
        mdnSpidMap.put("11024835", "Y388");
        mdnSpidMap.put("11024834", "Y388");
        mdnSpidMap.put("11024837", "Y388");
        mdnSpidMap.put("11024836", "Y388");
        mdnSpidMap.put("11025599", "Y458");
        mdnSpidMap.put("11025598", "Y458");
        mdnSpidMap.put("11024833", "Y388");
        mdnSpidMap.put("11024832", "Y388");
        mdnSpidMap.put("11025595", "Y458");
        mdnSpidMap.put("11025594", "Y458");
        mdnSpidMap.put("11025597", "Y458");
        mdnSpidMap.put("11025596", "Y458");
        mdnSpidMap.put("11025591", "Y458");
        mdnSpidMap.put("11025590", "Y458");
        mdnSpidMap.put("11025593", "Y458");
        mdnSpidMap.put("11025592", "Y458");
        mdnSpidMap.put("17743921", "V090");
        mdnSpidMap.put("19052519", "V047");
        mdnSpidMap.put("11025292", "Y430");
        mdnSpidMap.put("11025293", "Y430");
        mdnSpidMap.put("11025290", "Y430");
        mdnSpidMap.put("11025291", "Y430");
        mdnSpidMap.put("11025296", "Y430");
        mdnSpidMap.put("11025297", "Y430");
        mdnSpidMap.put("11025294", "Y430");
        mdnSpidMap.put("11025295", "Y430");
        mdnSpidMap.put("11025111", "Y413");
        mdnSpidMap.put("11025110", "Y413");
        mdnSpidMap.put("11025298", "Y430");
        mdnSpidMap.put("11025299", "Y430");
        mdnSpidMap.put("11025115", "Y413");
        mdnSpidMap.put("11025114", "Y413");
        mdnSpidMap.put("11025117", "Y413");
        mdnSpidMap.put("11025082", "Y411");
        mdnSpidMap.put("16548762", "V035");
        mdnSpidMap.put("16548761", "V034");
        mdnSpidMap.put("11025479", "Y446");
        mdnSpidMap.put("11024578", "Y366");
        mdnSpidMap.put("11024579", "Y366");
        mdnSpidMap.put("11024934", "Y398");
        mdnSpidMap.put("11025051", "Y408");
        mdnSpidMap.put("11025472", "Y446");
        mdnSpidMap.put("11025473", "Y446");
        mdnSpidMap.put("11025470", "Y446");
        mdnSpidMap.put("11025471", "Y446");
        mdnSpidMap.put("11025476", "Y446");
        mdnSpidMap.put("11025477", "Y446");
        mdnSpidMap.put("11025480", "Y447");
        mdnSpidMap.put("11025475", "Y446");
        mdnSpidMap.put("19123455", "V013");
        mdnSpidMap.put("19123454", "V013");
        mdnSpidMap.put("19123457", "V013");
        mdnSpidMap.put("19123456", "V013");
        mdnSpidMap.put("19123451", "V013");
        mdnSpidMap.put("19123450", "V013");
        mdnSpidMap.put("19123453", "V013");
        mdnSpidMap.put("19123452", "V013");
        mdnSpidMap.put("11025379", "Y438");
        mdnSpidMap.put("11025378", "Y438");
        mdnSpidMap.put("11024679", "Y374");
        mdnSpidMap.put("11024678", "Y374");
        mdnSpidMap.put("19123459", "V013");
        mdnSpidMap.put("19123458", "V013");
        mdnSpidMap.put("18026599", "V021");
        mdnSpidMap.put("11025507", "Y449");
        mdnSpidMap.put("11024840", "Y389");
        mdnSpidMap.put("11024841", "Y389");
        mdnSpidMap.put("18236785", "V065");
        mdnSpidMap.put("11024843", "Y389");
        mdnSpidMap.put("18236783", "V064");
        mdnSpidMap.put("18236782", "V063");
        mdnSpidMap.put("18236781", "V062");
        mdnSpidMap.put("11024847", "Y389");
        mdnSpidMap.put("11024848", "Y389");
        mdnSpidMap.put("11024849", "Y389");
        mdnSpidMap.put("11025057", "Y408");
        mdnSpidMap.put("11024955", "Y400");
        mdnSpidMap.put("11025168", "Y418");
        mdnSpidMap.put("11025042", "Y407");
        mdnSpidMap.put("18026598", "V021");
        mdnSpidMap.put("11025169", "Y418");
        mdnSpidMap.put("11024790", "Y384");
        mdnSpidMap.put("11024791", "Y384");
        mdnSpidMap.put("11024792", "Y384");
        mdnSpidMap.put("11025509", "Y449");
        mdnSpidMap.put("11024794", "Y384");
        mdnSpidMap.put("11024795", "Y384");
        mdnSpidMap.put("11024796", "Y384");
        mdnSpidMap.put("11024797", "Y384");
        mdnSpidMap.put("11024798", "Y384");
        mdnSpidMap.put("11024799", "Y384");
        mdnSpidMap.put("11024675", "Y374");
        mdnSpidMap.put("11024936", "Y398");
        mdnSpidMap.put("11025167", "Y418");
        mdnSpidMap.put("11024869", "Y391");
        mdnSpidMap.put("11025160", "Y418");
        mdnSpidMap.put("19162346", "V056");
        mdnSpidMap.put("11024514", "Y361");
        mdnSpidMap.put("11025496", "Y448");
        mdnSpidMap.put("19192456", "V016");
        mdnSpidMap.put("11024563", "Y365");
        mdnSpidMap.put("11025074", "Y410");
        mdnSpidMap.put("11025618", "Y460");
        mdnSpidMap.put("19162347", "V056");
        mdnSpidMap.put("11024515", "Y361");
        mdnSpidMap.put("11024946", "Y399");
        mdnSpidMap.put("11024562", "Y365");
        mdnSpidMap.put("19249872", "V023");
        mdnSpidMap.put("19249873", "V023");
        mdnSpidMap.put("11025474", "Y446");
        mdnSpidMap.put("19249871", "V023");
        mdnSpidMap.put("19249876", "V023");
        mdnSpidMap.put("19249877", "V023");
        mdnSpidMap.put("19162344", "V056");
        mdnSpidMap.put("19249875", "V023");
        mdnSpidMap.put("19249878", "V023");
        mdnSpidMap.put("19249879", "V023");
        mdnSpidMap.put("11024567", "Y365");
        mdnSpidMap.put("11024930", "Y398");
        mdnSpidMap.put("11025156", "Y417");
        mdnSpidMap.put("11024518", "Y361");
        mdnSpidMap.put("11024566", "Y365");
        mdnSpidMap.put("11024766", "Y381");
        mdnSpidMap.put("11025018", "Y405");
        mdnSpidMap.put("11025064", "Y409");
        mdnSpidMap.put("11024519", "Y361");
        mdnSpidMap.put("11024565", "Y365");
        mdnSpidMap.put("11025019", "Y405");
        mdnSpidMap.put("11025559", "Y454");
        mdnSpidMap.put("11025558", "Y454");
        mdnSpidMap.put("11025122", "Y414");
        mdnSpidMap.put("11024564", "Y365");
        mdnSpidMap.put("11025124", "Y414");
        mdnSpidMap.put("11025125", "Y414");
        mdnSpidMap.put("11025126", "Y414");
        mdnSpidMap.put("11025127", "Y414");
        mdnSpidMap.put("11025551", "Y454");
        mdnSpidMap.put("11025550", "Y454");
        mdnSpidMap.put("11025553", "Y454");
        mdnSpidMap.put("11025552", "Y454");
        mdnSpidMap.put("11025555", "Y454");
        mdnSpidMap.put("11025554", "Y454");
        mdnSpidMap.put("11025557", "Y454");
        mdnSpidMap.put("11025556", "Y454");
        mdnSpidMap.put("11025087", "Y411");
        mdnSpidMap.put("11025086", "Y411");
        mdnSpidMap.put("11025085", "Y411");
        mdnSpidMap.put("11025084", "Y411");
        mdnSpidMap.put("11025083", "Y411");
        mdnSpidMap.put("11024561", "Y365");
        mdnSpidMap.put("11025081", "Y411");
        mdnSpidMap.put("11025080", "Y411");
        mdnSpidMap.put("11024560", "Y365");
        mdnSpidMap.put("11025089", "Y411");
        mdnSpidMap.put("11025088", "Y411");
        mdnSpidMap.put("11024646", "Y371");
        mdnSpidMap.put("19162342", "V056");
        mdnSpidMap.put("11025017", "Y405");
        mdnSpidMap.put("19314279", "V010");
        mdnSpidMap.put("19314278", "V010");
        mdnSpidMap.put("11024647", "Y371");
        mdnSpidMap.put("19314275", "V010");
        mdnSpidMap.put("19314274", "V010");
        mdnSpidMap.put("19314277", "V010");
        mdnSpidMap.put("19314276", "V010");
        mdnSpidMap.put("19314271", "V010");
        mdnSpidMap.put("19314270", "V010");
        mdnSpidMap.put("19314273", "V010");
        mdnSpidMap.put("19314272", "V010");
        mdnSpidMap.put("11025155", "Y417");
        mdnSpidMap.put("11025154", "Y417");
        mdnSpidMap.put("11025157", "Y417");
        mdnSpidMap.put("11025268", "Y428");
        mdnSpidMap.put("11025151", "Y417");
        mdnSpidMap.put("11025150", "Y417");
        mdnSpidMap.put("11025153", "Y417");
        mdnSpidMap.put("11025152", "Y417");
        mdnSpidMap.put("11025014", "Y405");
        mdnSpidMap.put("11024642", "Y371");
        mdnSpidMap.put("11025016", "Y405");
        mdnSpidMap.put("11024688", "Y375");
        mdnSpidMap.put("11025159", "Y417");
        mdnSpidMap.put("11025158", "Y417");
        mdnSpidMap.put("11025012", "Y405");
        mdnSpidMap.put("11024643", "Y371");
        mdnSpidMap.put("97254480", "Z673");

    }

    private static Pattern mdnPattern = Pattern.compile("^([\\.\\d]+)\\.spid\\.e164\\.arpa$");

    private String extractMdn(String name) {
        String mdn = null;
        Matcher m = mdnPattern.matcher(name);
        if (m.matches()) {
            mdn = m.group(1).replace(".", "");
            mdn = new StringBuilder(mdn).reverse().toString();
        }
        return mdn;
    }

    private String extractMdn(DNSMessage dnsMessageIn) {
        String name = dnsMessageIn.getQuestions()[0].getName();
        return extractMdn(name);
    }

    private String nameFromMdn(String mdn) {
        char[] charA = mdn.toCharArray();
         ArrayUtils.reverse(charA);
         StringBuilder sb = new StringBuilder();
         for(char ch : charA) {
             sb.append(ch);
             sb.append(".");
         }
        sb.append("spid.e164.arpa.");
        return sb.toString();
    }
}
